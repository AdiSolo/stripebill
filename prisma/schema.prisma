// prisma/schema.prisma

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum SubscriptionPlan {
  BASIC
  PRO
}

model User {
  id           String            @id @default(uuid())
  email        String            @unique
  passwordHash String
  plan         SubscriptionPlan  @default(BASIC)
  createdAt    DateTime          @default(now())
  connections  Connection[]
}
model Connection {
  id                  String         @id @default(uuid())
  name                String         // user-friendly label
  stripeApiKey        String
  smartbillEmail      String
  smartbillToken      String
  smartbillCIF        String
  stripeWebhookId     String?        // will store the webhook endpoint id
  stripeWebhookSecret String?        // will store the webhook signing secret
  userId              String
  createdAt           DateTime       @default(now())

  user            User           @relation(fields: [userId], references: [id])
  payments        Payment[]      // relație spre plăți
  invoiceLinks    InvoiceLink[]  // relație spre facturi

  @@unique([userId, id])
}


model Payment {
  id           String     @id @default(uuid())
  stripeId     String     @unique
  amount       Int
  currency     String
  status       String
  connectionId String
  createdAt    DateTime   @default(now())

  connection   Connection @relation(fields: [connectionId], references: [id])
}

model InvoiceLink {
  id            String     @id @default(uuid())
  paymentId     String     @unique
  smartbillId   String     @unique
  status        String
  connectionId  String
  downloadUrl   String?
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  connection    Connection @relation(fields: [connectionId], references: [id])
}

model AuditLog {
  id        String   @id @default(uuid())
  eventType String
  payload   Json
  createdAt DateTime @default(now())
}
